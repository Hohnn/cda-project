{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "SkyDrone API",
    "description": "Open documentation for the SkyDrone project API."
  },
  "servers": [
    {
      "url": "https://skydrone-api.herokuapp.com/"
    },
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "API root"
        ],
        "description": "Endpoint to the API.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Welcome to SkyDrone API."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "The Users"
        ],
        "description": "Endpoint to get a user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "The Users"
        ],
        "description": "Endpoint to add a new user.",
        "parameters": [
          {
            "name": "idUser",
            "in": "body",
            "required": true,
            "description": "add a new user",
            "schema": {
              "$ref": "#/components/schemas/user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/users/{idUser}": {
      "get": {
        "tags": [
          "The Users"
        ],
        "description": "Endpoint to get a user by id.",
        "parameters": [
          {
            "name": "idUser",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "The Users"
        ],
        "description": "Endpoint to delete a user.",
        "parameters": [
          {
            "name": "idUser",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the user"
          }
        ],
        "responses": {
          "204": {
            "description": "DELETED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "The Users"
        ],
        "description": "Endpoint to update a user by id.",
        "parameters": [
          {
            "name": "idUser",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/user"
            },
            "description": "update a new user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/qrcodes/{idQrCode}": {
      "delete": {
        "tags": [
          "The QR Codes"
        ],
        "description": "Endpoint to delete a QR Code.",
        "parameters": [
          {
            "name": "idQrCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "delete an existing QR Code"
          }
        ],
        "responses": {
          "204": {
            "description": "DELETED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "The QR Codes"
        ],
        "description": "Endpoint to get a QR Code by id.",
        "parameters": [
          {
            "name": "idQrCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of The QR Codes"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/qrcodes": {
      "post": {
        "tags": [
          "The QR Codes"
        ],
        "description": "Endpoint to add a new QR Code.",
        "parameters": [
          {
            "name": "qrCode",
            "required": true,
            "description": "add a new QR Code",
            "schema": {
              "$ref": "#/components/schemas/qrCode"
            },
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "The QR Codes"
        ],
        "description": "Endpoint to get all QR Codes.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/drones/{idDrone}": {
      "delete": {
        "tags": [
          "The Drones"
        ],
        "description": "Endpoint to delete a drone.",
        "parameters": [
          {
            "name": "idDrone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the drone"
          }
        ],
        "responses": {
          "204": {
            "description": "DELETED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "The Drones"
        ],
        "description": "Endpoint to update a drone by id.",
        "parameters": [
          {
            "name": "idDrone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idDrone",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/drone"
            },
            "description": "update a new drone"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "The Drones"
        ],
        "description": "Endpoint to get a drone by id.",
        "parameters": [
          {
            "name": "idDrone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the drone"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "NOT FOUND"
          }
        }
      }
    },
    "/api/v1/drones": {
      "post": {
        "tags": [
          "The Drones"
        ],
        "description": "Endpoint to add a new drone.",
        "parameters": [
          {
            "name": "Drone",
            "in": "body",
            "description": "add a new drone",
            "schema": {
              "$ref": "#/components/schemas/drone"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "The Drones"
        ],
        "description": "Endpoint to get a drone.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "NOT FOUND"
          }
        }
      }
    },
    "/api/v1/orders/user/{idUser}": {
      "get": {
        "tags": [
          "The Orders"
        ],
        "description": "Endpoint to get all orders by user id.",
        "parameters": [
          {
            "name": "idUser",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ERROR"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/roles": {
      "get": {
        "tags": [
          "The Roles"
        ],
        "description": "Endpoint to get a role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "The Roles"
        ],
        "description": "Endpoint to add a new role.",
        "parameters": [
          {
            "name": "Role",
            "in": "body",
            "description": "add a new role",
            "schema": {
              "$ref": "#/components/schemas/role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/roles/{idRole}": {
      "get": {
        "tags": [
          "The Roles"
        ],
        "description": "Endpoint to get a role by id.",
        "parameters": [
          {
            "name": "idRole",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the roles"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "The Roles"
        ],
        "description": "Endpoint to delete a role.",
        "parameters": [
          {
            "name": "idRole",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the roles"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "The Roles"
        ],
        "description": "Endpoint to update a role by id.",
        "parameters": [
          {
            "name": "idRole",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Role",
            "in": "body",
            "description": "update a new role",
            "schema": {
              "$ref": "#/components/schemas/role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/categories/{idCategory}": {
      "delete": {
        "tags": [
          "The Categories"
        ],
        "description": "Endpoint to delete a category.",
        "parameters": [
          {
            "name": "idCategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the category"
          }
        ],
        "responses": {
          "204": {
            "description": "DELETED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "The Categories"
        ],
        "description": "Endpoint to update a category by id.",
        "parameters": [
          {
            "name": "idCategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Category",
            "in": "body",
            "description": "update an existing category",
            "schema": {
              "$ref": "#/components/schemas/categories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "The Categories"
        ],
        "description": "Endpoint to get a category by id.",
        "parameters": [
          {
            "name": "idCategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of The category"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "NOT FOUND"
          }
        }
      }
    },
    "/api/v1/categories": {
      "post": {
        "tags": [
          "The Categories"
        ],
        "description": "Endpoint to add a new category.",
        "parameters": [
          {
            "name": "Category",
            "in": "body",
            "description": "add a new category",
            "schema": {
              "$ref": "#/components/schemas/categories"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "The Categories"
        ],
        "description": "Endpoint to get a category.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "NOT FOUND"
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "The Orders"
        ],
        "description": "Endpoint to get a order.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "The Orders"
        ],
        "description": "Endpoint to add a new order.",
        "parameters": [
          {
            "name": "Order",
            "in": "body",
            "description": "add a new order",
            "schema": {
              "$ref": "#/components/schemas/order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/order"
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{idOrder}": {
      "get": {
        "tags": [
          "The Orders"
        ],
        "description": "Endpoint to get a order by id.",
        "parameters": [
          {
            "name": "idOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the order"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "The Orders"
        ],
        "description": "Endpoint to update a order by id.",
        "parameters": [
          {
            "name": "idOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "body",
            "required": true,
            "description": "Update an existing order",
            "schema": {
              "$ref": "#/components/schemas/order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "The Orders"
        ],
        "description": "Endpoint to delete a order.",
        "parameters": [
          {
            "name": "idOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the order to be deleted"
          }
        ],
        "responses": {
          "204": {
            "description": "DELETED"
          },
          "401": {
            "description": "NOT AUTHORIZED"
          },
          "403": {
            "description": "FORBIDDEN"
          },
          "404": {
            "description": "NOT FOUND"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/drones/categories/{idCategory}": {
      "get": {
        "tags": [
          "The Drones"
        ],
        "description": "Endpoint to get a drone category by id.",
        "parameters": [
          {
            "name": "idCategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of The Categories"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "NOT FOUND"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Endpoint to login a user.",
        "parameters": [
          {
            "name": "Login",
            "required": true,
            "description": "Login with email and password",
            "schema": {
              "$ref": "#/components/schemas/login"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BAD REQUEST"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@skydrone.fr"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "firstName_u": {
            "type": "string",
            "example": "firstname"
          },
          "lastName_u": {
            "type": "string",
            "example": "lastname"
          },
          "company_u": {
            "type": "string",
            "example": "company"
          },
          "phone_u": {
            "type": "string",
            "example": "phone"
          },
          "address_u": {
            "type": "string",
            "example": "address"
          },
          "siret_u": {
            "type": "string",
            "example": "siret"
          }
        },
        "required": [
          "email",
          "password",
          "firstName_u",
          "lastName_u",
          "company_u",
          "phone_u",
          "address_u",
          "siret_u"
        ]
      },
      "drone": {
        "type": "object",
        "properties": {
          "name_d": {
            "type": "string",
            "example": "Model A"
          },
          "category_id": {
            "type": "string",
            "example": "category_id"
          },
          "description_d": {
            "type": "string",
            "example": "A"
          },
          "pricePerDay_d": {
            "type": "number",
            "example": 123
          },
          "state": {
            "type": "string",
            "example": "Available"
          }
        },
        "required": [
          "name_d",
          "category_id",
          "description_d",
          "pricePerDay_d",
          "state"
        ]
      },
      "order": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "example": "Model A"
          },
          "drone_id": {
            "type": "string",
            "example": "category_id"
          },
          "startAt_o": {
            "type": "string",
            "example": "2022-01-01"
          },
          "endAt_o": {
            "type": "string",
            "example": "2022-12-01"
          },
          "report_o": {
            "type": "string",
            "example": "a report"
          },
          "createdBy_o": {
            "type": "string",
            "example": "idUser"
          },
          "updateBy_o": {
            "type": "string",
            "example": "idUser"
          },
          "state_o": {
            "type": "string",
            "example": "pending"
          }
        },
        "required": [
          "user_id",
          "drone_id",
          "startAt_o",
          "endAt_o",
          "createdBy_o"
        ]
      },
      "role": {
        "type": "object",
        "properties": {
          "name_r": {
            "type": "string",
            "example": "Administrateur"
          },
          "key_r": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "name_r",
          "key_r"
        ]
      },
      "categories": {
        "type": "object",
        "properties": {
          "name_cat": {
            "type": "string",
            "example": "D"
          },
          "description_cat": {
            "type": "string",
            "example": "les aéronefs utilisés pour un travail aérien d’une masse au décollage inférieure à 2 Kg (structure + charge)"
          },
          "key_cat": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "name_cat",
          "description_cat",
          "key_cat"
        ]
      },
      "qrCode": {
        "type": "object",
        "properties": {
          "src": {
            "type": "string",
            "example": "http://localhost:3000/api/v1/drones/61fa5c9665b3c0001671b770"
          },
          "qr_code": {
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "src"
        ]
      },
      "login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@skydrone.fr"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "images": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "image"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "basepath": "/",
  "security": {
    "bearerAuth": []
  }
}